# Generated by Django 5.1.2 on 2025-03-02 13:07

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GroupAccessCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_code', models.CharField(max_length=15, unique=True)),
                ('group_id', models.IntegerField(max_length=15)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'group_accesscode',
            },
        ),
        migrations.CreateModel(
            name='GroupBot',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('token', models.TextField()),
                ('commands', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'group_bot',
            },
        ),
        migrations.CreateModel(
            name='BotTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(max_length=256)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bot', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.groupbot')),
            ],
            options={
                'db_table': 'group_bot_task',
            },
        ),
        migrations.CreateModel(
            name='GroupBotCommands',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('command_id', models.IntegerField()),
                ('command_next', models.JSONField()),
                ('command_type', models.CharField(max_length=128)),
                ('command_info', models.JSONField()),
                ('bot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.groupbot')),
            ],
            options={
                'db_table': 'group_bot_command',
                'unique_together': {('bot', 'command_id')},
            },
        ),
        migrations.CreateModel(
            name='UserSocial',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('access_token', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'auth_user_social',
            },
        ),
        migrations.CreateModel(
            name='UserCurrentCommand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_id', models.IntegerField()),
                ('variables', models.JSONField(blank=True, null=True)),
                ('bot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.groupbot')),
                ('command', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.groupbotcommands')),
            ],
            options={
                'db_table': 'user_current_command',
                'unique_together': {('bot', 'social_id')},
            },
        ),
    ]
